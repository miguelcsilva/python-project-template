name: CI

on:
  push:

jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.10", "3.11"]

    steps:
      - name: Check-out repository
        uses: actions/checkout@v3

      - name: Set-up python installation
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies if no cache
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      - name: Activate venv
        run: |
          source .venv/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Black
        run: black --check .

      - name: Isort
        run: isort --check-only .

      - name: Ruff
        run: ruff check .

      - name: Mypy
        run: mypy .

      - name: Tests
        run: pytest
